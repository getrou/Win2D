<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>CanvasAnimatedControl.RunOnGameLoopThreadAsync Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="RunOnGameLoopThreadAsync method" /><meta name="System.Keywords" content="CanvasAnimatedControl.RunOnGameLoopThreadAsync method" /><meta name="Microsoft.Help.F1" content="Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl.RunOnGameLoopThreadAsync" /><meta name="Microsoft.Help.Id" content="M:Microsoft.Graphics.Canvas.UI.Xaml.CanvasAnimatedControl.RunOnGameLoopThreadAsync(Windows.UI.Core.DispatchedHandler)" /><meta name="Description" content="Schedules the provided callback to run asynchronously on the game loop thread." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Microsoft.Graphics.Canvas.UI.Xaml" /><meta name="file" content="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_RunOnGameLoopThreadAsync" /><meta name="guid" content="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_RunOnGameLoopThreadAsync" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Win2D documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Introduction.htm" title="Win2D documentation" tocid="roottoc">Win2D documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="APIReference.htm" title="API Reference" tocid="APIReference">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Microsoft_Graphics_Canvas_UI_Xaml.htm" title="Microsoft.Graphics.Canvas.UI.Xaml" tocid="N_Microsoft_Graphics_Canvas_UI_Xaml">Microsoft.Graphics.Canvas.UI.Xaml</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl.htm" title="CanvasAnimatedControl Class" tocid="T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl">CanvasAnimatedControl Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl.htm" title="CanvasAnimatedControl Methods" tocid="Methods_T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl">CanvasAnimatedControl Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_ConvertDipsToPixels.htm" title="ConvertDipsToPixels Method " tocid="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_ConvertDipsToPixels">ConvertDipsToPixels Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_ConvertPixelsToDips.htm" title="ConvertPixelsToDips Method " tocid="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_ConvertPixelsToDips">ConvertPixelsToDips Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_CreateCoreIndependentInputSource.htm" title="CreateCoreIndependentInputSource Method " tocid="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_CreateCoreIndependentInputSource">CreateCoreIndependentInputSource Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_Invalidate.htm" title="Invalidate Method " tocid="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_Invalidate">Invalidate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_RemoveFromVisualTree.htm" title="RemoveFromVisualTree Method " tocid="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_RemoveFromVisualTree">RemoveFromVisualTree Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_ResetElapsedTime.htm" title="ResetElapsedTime Method " tocid="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_ResetElapsedTime">ResetElapsedTime Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_RunOnGameLoopThreadAsync.htm" title="RunOnGameLoopThreadAsync Method " tocid="M_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl_RunOnGameLoopThreadAsync">RunOnGameLoopThreadAsync Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">CanvasAnimatedControl<span id="LST8460F3BC_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8460F3BC_0?cpp=::|nu=.");</script>RunOnGameLoopThreadAsync Method </td></tr></table><span class="introStyle"></span> <div class="summary">Schedules the provided callback to run asynchronously on the game loop thread.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Microsoft_Graphics_Canvas_UI_Xaml.htm">Microsoft.Graphics.Canvas.UI.Xaml</a><br />
    <strong>Assembly:</strong>
   Microsoft.Graphics.Canvas (in Microsoft.Graphics.Canvas.dll) Version: 0.0.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">IAsyncAction</span> <span class="identifier">RunOnGameLoopThreadAsync</span>(
	<span class="identifier">DispatchedHandler</span> <span class="parameter">agileCallback</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">agileCallback</span></dt><dd>Type: <a href="T_Windows_UI_Core_DispatchedHandler.htm">Windows.UI.Core<span id="LST8460F3BC_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8460F3BC_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>DispatchedHandler</a><br /></dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Windows_Foundation_IAsyncAction.htm">IAsyncAction</a><h4 class="subHeading">Implements</h4><a href="M_Microsoft_Graphics_Canvas_UI_Xaml_ICanvasAnimatedControl_RunOnGameLoopThreadAsync.htm">ICanvasAnimatedControl<span id="LST8460F3BC_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8460F3BC_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>RunOnGameLoopThreadAsync(DispatchedHandler)</a><br /></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          The action will not run until the control's CreateResources event has
          completed (including any tracked async actions).  This means that the
          callback can assume that CreateResources has completed.
        </p><p>
          If the control has not been loaded yet (ie the Loaded event has not
          been raised) then the IAsyncAction that is returned is in the canceled
          state.  Any work that has not completed before the control has
          unloaded will also be canceled.  This means that any code that uses
          "await" needs to be able to deal with the possibility that it fails
          with a TaskCanceledException.  If there is no need to wait for the
          action to complete then the return value can be ignored:
          <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAFABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAFABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAFABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// This might throw TaskCanceledException (as well as any exception thrown by the callback)</span>
<span class="highlight-keyword">await</span> animatedControl.RunOnGameLoopThreadAsync(() =&gt; { ... });

<span class="highlight-comment">// Any exceptions thrown by the callback, including TaskCanceledException, are ignored</span>
<span class="highlight-keyword">var</span> ignoredAction = animatedControl.RunOnGameLoopThreadAsync(() =&gt; { ... });</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAFABA");</script></p><p>
          Beware of passing async delegates to this method! The code:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EADABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">await</span> animatedControl.RunOnGameLoopThreadAsync(<span class="highlight-keyword">async</span> () =&gt;
{
    Debug.WriteLine(<span class="highlight-literal">"a"</span>);
    <span class="highlight-keyword">await</span> Task.Delay(<span class="highlight-number">1000</span>);
    Debug.WriteLine(<span class="highlight-literal">"b"</span>);
});
Debug.WriteLine(<span class="highlight-literal">"c"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABA");</script><p>
          might reasonably be expected to print  "a", "b", "c",
          but in fact the output is "a", "c", "b".
          
          You may also be surprised to learn that the Debug.WriteLine
          call which prints "b" will run on an arbitrary threadpool
          thread, not the game loop thread at all!
        </p><p>
          For a detailed explanation and solution to these issues, see the 
          <a href="http://github.com/Microsoft/Win2D-Samples/blob/master/ExampleGallery/Shared/Infrastructure/GameLoopSynchronizationContext.cs">GameLoopSynchronizationContext</a>
          helper which is part of the Example Gallery sample application.
        </p><p>
          Note that these complexities only occur when the callback passed
          to RunOnGameLoopThreadAsync is itself async (containing one or
          more await statements). Everything works straightforwardly with
          no need for a custom synchronization context as long as your
          callback is a regular (non async) method or lambda.
        </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl.htm">CanvasAnimatedControl Class</a></div><div class="seeAlsoStyle"><a href="N_Microsoft_Graphics_Canvas_UI_Xaml.htm">Microsoft.Graphics.Canvas.UI.Xaml Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://github.com/Microsoft/Win2D/blob/master/LICENSE.txt" target="_blank">Copyright (c) Microsoft Corporation. All rights reserved.</a></p> </div></body></html>