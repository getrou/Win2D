<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Articles</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="Articles" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Win2D documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Introduction.htm" title="Win2D documentation" tocid="roottoc">Win2D documentation</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Articles.htm" title="Articles" tocid="Articles">Articles</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Interop.htm" title="Interop with Direct2D" tocid="Interop">Interop with Direct2D</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Offscreen.htm" title="Offscreen drawing" tocid="Offscreen">Offscreen drawing</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="DPI.htm" title="DPI and DIPs" tocid="DPI">DPI and DIPs</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ChoosingResolution.htm" title="Choosing control resolution" tocid="ChoosingResolution">Choosing control resolution</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="PixelFormats.htm" title="Pixel formats" tocid="PixelFormats">Pixel formats</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="PremultipliedAlpha.htm" title="Premultiplied alpha" tocid="PremultipliedAlpha">Premultiplied alpha</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BlockCompression.htm" title="Bitmap block compression" tocid="BlockCompression">Bitmap block compression</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="EffectPrecision.htm" title="Effect precision and clamping" tocid="EffectPrecision">Effect precision and clamping</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="HandlingDeviceLost.htm" title="Handling device lost" tocid="HandlingDeviceLost">Handling device lost</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="WithoutControls.htm" title="Using Win2D without built-in controls" tocid="WithoutControls">Using Win2D without built-in controls</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="LoadingResourcesOutsideCreateResources.htm" title="Loading resources outside of CreateResources" tocid="LoadingResourcesOutsideCreateResources">Loading resources outside of CreateResources</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="RefCycles.htm" title="Avoiding memory leaks" tocid="RefCycles">Avoiding memory leaks</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Articles</td></tr></table><span class="introStyle"></span> <div id="ID0RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><td><a href="Interop.htm">Interop with Direct2D</a></td><td>
        Win2D is implemented as a layer on top of 
        <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/dd370990" target="_blank">Direct2D</a>,
        and supports interop in both directions. If you have a Win2D object, you can
        access the native Direct2D object that is used to implement it. If you have a Direct2D 
        object, you can look up the Win2D object that wraps it, or create a new wrapper 
        if one did not already exist.
      </td></tr><tr><td><a href="Offscreen.htm">Offscreen drawing</a></td><td>
          Apps occasionally need to draw graphics to a target, where that
          target is <strong>not</strong> intended for immediate 
          display. This type of drawing is sometimes called "offscreen 
          rendering", or "drawing to a texture".
          This is useful when, for example, an app's output of a drawing
          operation is to be saved to a file, returned as an array of pixels,
          or used as an input to a later operation.
        </td></tr><tr><td><a href="DPI.htm">DPI and DIPs</a></td><td>
        This article explains the difference between physical pixels and device 
        independent pixels (DIPs), and how DPI (dots per inch) is handled in Win2D.
      </td></tr><tr><td><a href="ChoosingResolution.htm">Choosing control resolution</a></td><td>
          This article explains how to configure the resolution used by 
          Win2D's XAML controls. It explains how to:
          <ul><li>
                  Make Win2D controls run at a fixed resolution.
              </li><li>
                  Adjust control DPI to improve performance by rendering fewer pixels.
              </li></ul></td></tr><tr><td><a href="PixelFormats.htm">Pixel formats</a></td><td>
        The
        <a href="https://msdn.microsoft.com/en-us/library/windows/apps/windows.graphics.directx.directxpixelformat.aspx" target="_blank">DirectXPixelFormat</a>
        enum includes all the many and varied pixel formats used by Direct3D and DXGI, 
        but only a few of these options are supported by Win2D (or by Direct2D upon which 
        Win2D is built).
      </td></tr><tr><td><a href="PremultipliedAlpha.htm">Premultiplied alpha</a></td><td>
        In computer graphics there are two different ways to represent the opacity of a 
        color value. Win2D uses both methods. This article explains the difference, and 
        which is used where.
      </td></tr><tr><td><a href="BlockCompression.htm">Bitmap block compression</a></td><td>
        CanvasBitmap supports block compressed bitmaps.  These can be loaded
        from a DDS file, or created with
        <a href="M_Microsoft_Graphics_Canvas_CanvasBitmap_CreateFromBytes.htm">CreateFromBytes(ICanvasResourceCreator, <span id="LST359404FB_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST359404FB_0?cpp=array&lt;");</script>Byte<span id="LST359404FB_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST359404FB_1?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, DirectXPixelFormat)</a>.
      </td></tr><tr><td><a href="EffectPrecision.htm">Effect precision and clamping</a></td><td>
        Care must be taken while rendering effects using Win2D to achieve the desired level of 
        quality and predictability with respect to numerical precision.
      </td></tr><tr><td><a href="HandlingDeviceLost.htm">Handling device lost</a></td><td>
          "Device lost" refers to a situation where the GPU graphics device becomes 
          unusable for further rendering. This can occur due to GPU hardware malfunction, 
          driver bugs, driver software updates, or switching the app from one GPU to 
          another. A lost device can no longer be used, and any attempt to do so from 
          Win2D will throw an exception. To recover from this situation, the app must 
          create a new device and then recreate all its graphics resources.
        </td></tr><tr><td><a href="WithoutControls.htm">Using Win2D without built-in controls</a></td><td><a href="T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasControl.htm">CanvasControl</a>,
        <a href="T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasVirtualControl.htm">CanvasVirtualControl</a> 
        and 
        <a href="T_Microsoft_Graphics_Canvas_UI_Xaml_CanvasAnimatedControl.htm">CanvasAnimatedControl</a> 
        are XAML controls- they extend UserControl and can exist alongside 
        other controls in an app's XAML tree. They are good choice for many WinRT
        apps that use XAML and produce graphical content using Win2D. While 
        these controls are versatile, they do impose policies pertaining to 
        layout, resource re-creation, and device lost. Apps may want to 
        implement their own XAML controls, or not use XAML at all. 
      </td></tr><tr><td><a href="LoadingResourcesOutsideCreateResources.htm">Loading resources outside of CreateResources</a></td><td>
          This document discusses how apps using Win2D's XAML controls,
          CanvasControl, CanvasVirtualControl and CanvasAnimatedControl, can
          load resources from outside the CreateResources handler.
        </td></tr><tr><td><a href="RefCycles.htm">Avoiding memory leaks</a></td><td>
        When using Win2D controls in managed XAML applications, care must be taken to 
        avoid reference count cycles that could prevent these controls ever being 
        reclaimed by the garbage collector.
      </td></tr></table></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://github.com/Microsoft/Win2D/blob/master/LICENSE.txt" target="_blank">Copyright (c) Microsoft Corporation. All rights reserved.</a></p></div></body></html>