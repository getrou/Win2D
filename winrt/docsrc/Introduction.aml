<?xml version="1.0"?>
<!--
Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the MIT License. See LICENSE.txt in the project root for license information.
-->

<topic id="Introduction" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para><legacyBold>
        Moving Win2D onto WinUI3/Project Reunion is a work in progress. Some features
        are not supported, and some of the Documentation still points to old WinUI2
        concepts and classes.
      </legacyBold></para>
      <para>
        Win2D is an easy-to-use Windows Runtime API for immediate mode 2D graphics
        rendering with GPU acceleration. It is available to WinUI3 app developers.
        It utilizes the power of Direct2D, and integrates seamlessly with XAML.
      </para>

      <para>Where to get it:</para>
      <list class="bullet">
        <listItem>
          <externalLink>
            <linkText>NuGet package</linkText>
            <linkUri>http://www.nuget.org/packages/Microsoft.Graphics.Win2D</linkUri>
          </externalLink>
        </listItem>
        <listItem>
          <externalLink>
            <linkText>Source code</linkText>
            <linkUri>http://github.com/Microsoft/Win2D/tree/WinUI3Master</linkUri>
          </externalLink>
        </listItem>
      </list>

      <para>How to use it:</para>
      <list class="bullet">
        <listItem>
          <externalLink>
            <linkText>Sample code</linkText>
            <linkUri>http://github.com/Microsoft/Win2D-samples</linkUri>
          </externalLink>
          (Not yet updated for WinUI3)
        </listItem>
      </list>
      <!-- Re-add this when the sample gallery is updated for WinUI3 -->
      <!-- <para>How to use it:</para>
      <list class="bullet">
        <listItem>
          <externalLink>
            <linkText>Sample code</linkText>
            <linkUri>http://github.com/Microsoft/Win2D-samples</linkUri>
          </externalLink>
          -
          <legacyItalic>
            also available in the
            <externalLink>
              <linkText>Store</linkText>
              <linkUri>https://www.microsoft.com/store/apps/9NBLGGGXWT9F</linkUri>
            </externalLink>
          </legacyItalic>
        </listItem>
      </list> -->

      <para>More info:</para>
      <list class="bullet">
        <listItem>
          <externalLink>
            <linkText>Report a bug or ask a question</linkText>
            <linkUri>http://github.com/Microsoft/Win2D/issues</linkUri>
          </externalLink>
        </listItem>
        <listItem>
          <externalLink>
            <linkText>Changelog</linkText>
            <linkUri>http://github.com/Microsoft/Win2D/blob/master/CHANGELOG.md</linkUri>
          </externalLink>
        </listItem>
      </list>
    </introduction>

    <section address="GettingSetUp">
      <title>Getting set up</title>

      <content>
        <para>
          <externalLink>
            <linkText>Getting Started with Project Reunion</linkText>
            <linkUri>https://docs.microsoft.com/en-us/windows/apps/project-reunion/#set-up-your-development-environment</linkUri>
          </externalLink>:
        </para>

        <para>Add the Win2D NuGet package:</para>
        <list class="bullet">
          <listItem>Go to 'Tools' -> 'NuGet Package Manager' -> 'Manage NuGet Packages for Solution...'</listItem>
          <listItem>Type 'Win2D' into the 'Search Online' box, and hit Enter</listItem>
          <listItem>Select the 'Microsoft.Graphics.Win2D' package and click 'Install', then 'OK'</listItem>
          <listItem>Accept the license agreement</listItem>
          <listItem>Click 'Close'</listItem>
        </list>
      </content>
    </section>

    <section>
      <title>Write some code</title>
      <content>
        <para>Add a <codeEntityReference>T:Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl</codeEntityReference> to your XAML page:</para>
        <list class="bullet">
          <listItem>Double click on MainWindow.xaml in Solution Explorer to open the XAML editor</listItem>
          <listItem>
            Add the <codeEntityReference>N:Microsoft.Graphics.Canvas.UI.Xaml</codeEntityReference> namespace next to the existing xmlns statements:
            <code>
              xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
            </code>
          </listItem>
          <listItem>
            Add a CanvasControl inside the existing Grid control:
            <code>
              &lt;Grid&gt;
                  &lt;canvas:CanvasControl Draw="CanvasControl_Draw" ClearColor="CornflowerBlue"/&gt;
              &lt;/Grid&gt;
            </code>
          </listItem>
        </list>

        <para>Then add some Win2D drawing code.</para>
        <list class="bullet">
          <listItem>
            If you created a C# project, edit MainWindow.xaml.cs:
            <code>
              using Microsoft.UI;
              using Microsoft.UI.Xaml.Controls;
              using Microsoft.Graphics.Canvas.UI.Xaml;

              public sealed partial class MainWindow : Window
              {
                  public MainWindow()
                  {
                      this.InitializeComponent();
                  }

                  void CanvasControl_Draw(CanvasControl sender, CanvasDrawEventArgs args)
                  {
                      args.DrawingSession.DrawEllipse(155, 115, 80, 30, Colors.Black, 3);
                      args.DrawingSession.DrawText("Hello, world!", 100, 100, Colors.Yellow);
                  }
              }
            </code>
          </listItem>

          <listItem>
            If you created a C++/CX project, edit MainWindow.xaml.h and add a function declaration to the MainWindow class:
            <code>
              void CanvasControl_Draw(Microsoft::Graphics::Canvas::UI::Xaml::CanvasControl^ sender,
                                      Microsoft::Graphics::Canvas::UI::Xaml::CanvasDrawEventArgs^ args);
            </code>
            Then edit MainWindow.xaml.cpp:
            <code>
              #include "pch.h"
              #include "MainWindow.xaml.h"

              using namespace App1;
              using namespace Microsoft::UI;
              using namespace Microsoft::Graphics::Canvas::UI::Xaml;

              MainWindow::MainWindow()
              {
                  InitializeComponent();
              }

              void MainWindow::CanvasControl_Draw(CanvasControl^ sender, CanvasDrawEventArgs^ args)
              {
                  args->DrawingSession->DrawEllipse(155, 115, 80, 30, Colors::Black, 3);
                  args->DrawingSession->DrawText("Hello, world!", 100, 100, Colors::Yellow);
              }
            </code>
          </listItem>

          <listItem>
            Or if you created a VB project, edit MainWindow.xaml.vb:
            <code>
              Imports Microsoft.UI
              Imports Microsoft.UI.Xaml.Controls
              Imports Microsoft.Graphics.Canvas.UI.Xaml
              
              Public NotInheritable Class MainWindow
                  Inherits Page
                  Public Sub New()
                      Me.InitializeComponent()
                  End Sub

                  Private Sub CanvasControl_Draw(sender As CanvasControl, args As CanvasDrawEventArgs)
                      args.DrawingSession.DrawEllipse(155, 115, 80, 30, Colors.Black, 3)
                      args.DrawingSession.DrawText("Hello, world!", 100, 100, Colors.Yellow)
                  End Sub
              End Class
            </code>
          </listItem>
        </list>
        
        <para>
          If you prefer to build your own version of Win2D from source, see the WinUI3 branch 
          <externalLink>
            <linkUri>https://github.com/Microsoft/Win2D/blob/master/README.md</linkUri>
            <linkText>readme</linkText>
          </externalLink>
          for instructions on how to clone from GitHub and compile it locally.
        </para>
      </content>
    </section>
    
  </developerConceptualDocument>
</topic>
